# Корутины или сопрограмы


# В yield можно передавать значения, проверить статус генератора можно через getgeneratorstate модуля inspect
# Передача данных в yield происходит через .send() объекта генератора, при первой итерации по стандарту передаётся None, после можно
# передавать требующиеся значения.
def subgen():
    message = yield
    print(message)
    

# # Пример задачи с использованием такого свойства генераторов
# Проблема. Требуется найти среднее значение данных, которые постепенно поступают для формирования статистики(посещение сайта, продажи и т.д.)
# Реализуем генератор, который будет готов к получению данных и расчёту среднего значения.
def avarege():
    count = 0
    summ = 0
    avarege = None
    
    while True:
        try:
            x = yield avarege # не забываем что yield работает как return, то есть он возвращает значения!
        
        except StopIteration:
            print('Done')
        
        else:
            count += 1
            summ += x
            avarege = round(summ / count, 2)
        